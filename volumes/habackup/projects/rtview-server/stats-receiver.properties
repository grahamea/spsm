# Solace Enterprise Stats Receiver Configuration
# ==============================================

# Solace Connection Properties
# ==============================================
# The Solace Message Router msg-backbone IP address.
# Format: <IP|Hostname>[:Port] - default port 55555
#SOLACE_HOST = 192.168.187.129

# The message-vpn on which StatsPump is publishing messages.
# NOTE: currently on this message-vpn, the StatsPump must be configured to 
# be publishing with the SdtMapFactory class.
#SOLACE_VPN = stats_sdt

# Client-username to use for authentication.
#SOLACE_USERNAME = stats
# 
# The encrypted password for the client-username. Use the pwd-utility to
# encrypt the passwords. 
#SOLACE_PASSWORD = 352078205ab98cf8b89218b8cee27e33

# Controls how many attempts to re-connect after a connection loss before quitting
# default defers to the Solace JSCMP API
#SOLACE_RECONNECT_RETRIES=3

# Controls how many attempts to connect when initial connection can't be establish 
# before quitting default defers to the Solace JSCMP API
#SOLACE_CONNECT_RETRIES=3

# Controls how many attempts to connect to a single host (when a host list is used) 
# when initial connection can't be establish before quitting 
#default defers to the Solace JSCMP API
#SOLACE_CONNECT_RETRIES_PER_HOST=3

# Controls the wait period between reconnection attempts when re-connecting after a 
# connection loss default defers to the Solace JSCMP API
#SOLACE_RECONNECT_RETRY_WAIT_MS=200

# Optional. A unique client name to assign to the Solace connection.
# Default is: Stats_Receiver-<timestamp>
#SOLACE_CLIENT = Sample_Stats_Receiver

# The semi-colon separated list of topics that the receiver will subscribe to
# receives the stats messages. For example, the topic '#STATS/SYSTEM/*/>' will
# subscribe to system level stats and send them to the receiver plugin.
SOLACE_TOPICS = #STATS/>

# Optional. If you want to stats-receiver to receive messages using Solace's 
# persistent messaging, then set the SOLACE_QUEUE property to the name of the
# queue endpoint, which is created on the above SOLACE_VPN, and configured with
# appropriate topics. Generally, these topics should be the same as you would
# have entered above in the SOLACE_TOPICS property.
# NOTE: that the SOLACE_TOPICS property is ignored when you provide a SOLACE_QUEUE.
#SOLACE_QUEUE = statsQ

# Stats Receiver Properties
# ==============================================

# The class that implements the StatsTap interface or extends the 
# AbstractStatTap class. The SampleReceiver implementation configured below
# outputs received metrics on the console.
#TAP_PLUGIN_CLASS = com.solace.psg.enterprisestats.receiver.sample.SampleReciever
#TAP_PLUGIN_CLASS = com.solace.psg.enterprisestats.receiver.influxdb.InfluxDBStatsTap
TAP_PLUGIN_CLASS = com.sl.statsds.RTViewStatsTap

# The semi-colon separated list of topics that identifies the fields within each
# message type that will be written to the database.
# Format of each subscription is ROOT_OF_TOPIC_STRING_SUFFIX/TOPIC_BELOW_SEMP_BASE_TAG
# Example: SYSTEM_CONFIG-SYNC/authentication/client-certificate/max-certificate-chain-depth
DB_FIELD_SUBSCRIPTIONS=\
        >

# Here are some examples that can be used
#   SYSTEM_MEMORY/subscription-memory-usage-percent;\
#   SYSTEM_MEMORY/physical-memory-usage-percent;\
#   SYSTEM_MEMORY/slot-infos/*/nab-buffer-load-factor;\
#   SYSTEM_STATS_CLIENT/>;\
#   SYSTEM_STATS_NEIGHBOR/>;\
#   SYSTEM_CSPF_NEIGHBOR_STATS/>;\
#   SYSTEM_MSG-SPOOL_DETAIL/*;\
#   SYSTEM_MSG-SPOOL_STATS/>;\
#   VPN_BRIDGE_STATS/client/stats/>;\
#   VPN_STATS/stats/>;\
#   VPN_STATS/unique-subscriptions;\
#   VPN_STATS/total-local-unique-subscriptions;\
#   VPN_STATS/total-remote-unique-subscriptions;\
#   VPN_STATS/total-unique-subscriptions;\
#   VPN_STATS/max-subscriptions;\
#   VPN_STATS/connections;\
#   VPN_STATS/connections-service-smf;\
#   VPN_STATS/connections-service-web;\
#   VPN_STATS/connections-service-rest-incoming;\
#   VPN_STATS/connections-service-mqtt;\
#   VPN_STATS/connections-service-rest-outgoing;\
#   VPN_STATS/max-connections;\
#   VPN_STATS/max-connections-service-smf;\
#   VPN_STATS/max-connections-service-web;\
#   VPN_STATS/max-connections-service-rest-incoming;\
#   VPN_STATS/max-connections-service-mqtt;\
#   VPN_STATS/max-connections-service-rest-outgoing;\
#   VPN_STATS/maximum-spool-usage-mb;\
#   VPN_STATS/maximum-transacted-sessions;\
#   VPN_STATS/maximum-transactions;\
#   VPN_MSG-SPOOL/*;\
#   VPN_QUEUE_DETAIL/info/quota;\
#   VPN_QUEUE_DETAIL/info/total-delivered-unacked-msgs;\
#   VPN_QUEUE_DETAIL/info/max-bind-count;\
#   VPN_QUEUE_DETAIL/info/high-water-mark-in-mb;\
#   VPN_QUEUE_DETAIL/info/total-acked-msgs-in-progress;\
#   VPN_QUEUE_DETAIL/info/current-spool-usage-in-mb;\
#   VPN_QUEUE_DETAIL/info/max-delivered-unacked-msgs-per-flow;\
#   VPN_QUEUE_DETAIL/info/bind-count;\
#   VPN_QUEUE_DETAIL/info/num-messages-spooled;\
#   VPN_QUEUE_RATES/>;\
#   VPN_QUEUE_STATS/>;\
#   VPN_TE_DETAIL/info/quota;\
#   VPN_TE_DETAIL/info/total-delivered-unacked-msgs;\
#   VPN_TE_DETAIL/info/max-bind-count;\
#   VPN_TE_DETAIL/info/high-water-mark-in-mb;\
#   VPN_TE_DETAIL/info/total-acked-msgs-in-progress;\
#   VPN_TE_DETAIL/info/current-spool-usage-in-mb;\
#   VPN_TE_DETAIL/info/max-delivered-unacked-msgs-per-flow;\
#   VPN_TE_DETAIL/info/bind-count;\
#   VPN_TE_DETAIL/info/num-messages-spooled;\
#   VPN_TE_RATES/>;\
#   VPN_TE_STATS/>;

# Optional. The maximum number of tasks (stat messages) that the receiver will
# cache in memory in a work queue, awaiting to be written out to the configured
# plugin.
# Default is: 1000
#THREAD_WORK_QUEUE_SIZE = 100

# Optional. The minimum number of threads in the pool for processing messages
# from the internal work queue.
# Default is: 3
#THREAD_POOL_MIN_SIZE = 3

# Optional. The maximum number of threads in the pool for processing messages
# from the internal work queue.
# Default is: 10
#THREAD_POOL_MAX_SIZE = 10

# Optional. To receive StatsPump internal poller metrics enable the following.
# Default is: false (i.e. collection of poller stats is disabled).
ENABLE_POLLER_STATS = false

# ==============================================
# StatsTap Plugin Specific Properites
# ==============================================

# InfluxDB Properties
# ==============================================
# The following properties should be set if using the InfluxDB plugin.

# Hostname or IP address and port used for InfluxDB HTTP POSTs. 
# Default port is usually 8086
#INFLUXDB_HOST = 192.168.136.139:8086

# The database name which InfluxDB will be writing metric to. This database
# should be created prior to running the stats-receiver with the InfluxDB 
# plugin and granted with write permission for the username provided below.
#INFLUXDB_DB = stats

# Username that has write access to the above InfluxDB database.
#INFLUXDB_USER=stats

# Password for the above username. Use the Solace PSG Password Utility to 
# encrypt your password.
#INFLUXDB_PASSWORD=352078205ab98cf8b89218b8cee27e33

# The following 3 parameters control HTTP error handling with communication to 
# Influx DB

# This setting controls how long the HTTP request will wait before timing out on 
# the connection for inserts sent to InfluxDB. Default is 5000 (ms, or 5 secs)
#INFLUXDB_HTTP_CONNECT_TIMEOUT = 5000

# This setting controls how long the HTTP request will wait before timing out on 
# inserts sent to InfluxDB. Default is 5000 (ms, or 5 secs)
#INFLUXDB_HTTP_READ_TIMEOUT = 5000

# This setting controls the number of times the InfluxDB tap will retry upon an
# HTTP error before discarding the statistic. The default value is 1 - just 1 attempt.
# INFLUXDB_HTTP_READ_RETRIES = 3

# Optional. The database name which InfluxDB will be writing StatsPump poller
# stats metrics to. If ENABLE_POLLER_STATS is set to true then this database
# should be created prior to running the stats-receiver with the InfluxDB
# plugin.
# Default is: statspump_poller_stats
#INFLUXDB_POLLER_STATS_DB = statspump_poller_stats

# For debugging without an actual InfluxDB database, set INFLUX_STUBBED to true.
# This will cause the http request to be written out to a local file instead of 
# being sent to the database.
# Default is: false
#INFLUX_STUBBED = true
